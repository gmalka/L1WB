package main

import (
	"fmt"
	"sync"
)

func main() {
	// Массив чисел, квадраты которых нужно вычислить и вывести
	mas := []int{2,4,6,8,10}

	// WaitGroup чтобы основная программа могла дождаться завершения горутин
	wg := &sync.WaitGroup{}

	// Проходимся по всему массиву, первое значение мы игнорируем, так как это индекс элемента в массиве
	for _, v := range mas {
		// Добавляем 1 к количеству горутин, которых нужно дождаться
		wg.Add(1)

		// Запускаем анонимную функцию в отдельной горутине, которая будет выполняться ассинхронно
		// Число, которое требуется вчислить передаем в качестве аргумента, так как если использовать замыкание,
		// то результат может оказаться неопределенным.
		go func(num int) {
			// Вычисляем и выводим квадрат числа
			fmt.Printf("Квадрат числа %d равен %d\n", num, num * num)

			// Говорим WaitGroup, что текущая горутина закончила выполнение
			wg.Done()

		// Вызываем функцию после ее определения и передаем в качестве аргумента элемент массива
		}(v)
	}

	// После цикла дожидаемся выполнения всех горутин
	wg.Wait()
}